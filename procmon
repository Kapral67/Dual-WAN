#!/bin/sh
#########################################################################
# procmon 
#
# Run by cron, checks that monitord is running, restarting if necessary
#
# Author: David Medders
#########################################################################

. /jffs/scripts/wan/global

LOGLEVEL=$LOG_INFO       # overriding log level for procmon
FILELEVEL=$LOGLEVEL

wanlogger $LOG_DEBUG "$BN: starting"

date '+%s %d%b%g %H%M%S' > $TMPDIR/$HBROOT.procmon    # heartbeat for procmon

PIDFILE=$PIDDIR/monitord.pid

HBFILE=$TMPDIR/$HBROOT.monitord    # heartbeat file 
HBWAIT=$(($CHECKRATE*2))           # maximum time to wait for monitor heartbeat

HBTIME=`cat $HBFILE | cut -f1 -d' '`

if [ -z $HBTIME ]; then   # allow time for hb write to complete, then reread
  sleep 1                 # See Note 1 below
  HBTIME=`cat $HBFILE | cut -f1 -d' '`
  wanlogger $LOG_DEBUG "$BN: reread $HBTIME"
fi

wanlogger $LOG_DEBUG "$BN: heartbeat file `cat $HBFILE`"
wanlogger $LOG_DEBUG "$BN: HBWAIT $HBWAIT HBTIME $HBTIME"
wanlogger $LOG_DEBUG "$BN: date `date '+%s'`"

if [ `date '+%s'` -gt $(($HBTIME+$HBWAIT)) ]; then # heartbeat fail
  wanlogger $LOG_WARNING "$BN: heartbeat fail for monitord, restarting #08 monitord"
  
  ps | grep `cat $PIDFILE` | grep "monitord" >/dev/null
  if [ $? -eq 0 ]; then     # monitord is still in the process table
    wanlogger $LOG_ERR "$BN: monitord in process table, killing"
    kill -9 `cat $PIDFILE`
    sleep 2
  fi

  $WANDIR/monitord &
fi

wanlogger $LOG_DEBUG "$BN: complete"

exit 0

#############################################################################
# Note 1: This re-read exists to eliminate false heartbeat failures due to
#         pre-emptive multi-tasking.  Heartbeat write in monitord
#         is occasionally task switched after the heartbeat file is truncated,
#         but before the new heartbeat timestamp is written.  The one second
#         sleep allows time for the heartbeat write to complete.
#############################################################################

